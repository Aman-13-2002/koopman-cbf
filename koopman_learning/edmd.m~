function K = edmd(Z, Z_p, solver,first_obs_one)
    n_lift = size(Z,1);
    n_pred = size(Z_p,1);
    
    if nargin <= 2
        cvx_begin
        cvx_solver gurobi
        variables K(n_lift,n_lift)
        minimize(norm(Z_p - K*Z, Inf))
        cvx_end
    else
        if strcmp(solver,'lasso')
            K = zeros(n_pred,n_lift);
            for i = 1 : n_pred
                if first_obs_one
                    x = Z(2:end,:)';
                    y = Z_p(i,:);
                    [K(i,2:end), inf] = lasso(x, y,'Lambda',1e-3); 
                    K(i,1) = inf.Intercept;
                else
                    x = Z(1:end,:)';
                    y = Z_p(i,:);
                    K(i,:) = lasso(x, y,'Lambda',1e-3,'Intercept',false); 
                end
                fprintf('Learned %i out of %i predictors\n', i, n_pred);
            end
        elseif strcmp(solver,'gurobi')
            cvx_begin
            cvx_solver gurobi
            variables K(n_pred,n_lift)
            %obj = norm(Z_p - K*Z, Inf);
            obj = 0;
            for i = 1 : n_pred
                obj = obj + norm(K(i,:)*Z-Z_p(i,:)) + 1e-3*norm(K(i,:),1);
            end
            
            minimize(obj)
            subject to
                norm(K(4:8)*Z) == 1
            cvx_end
        end
        
    
    end
end